var x = 45;
var y = 200;
var boxerSpeed = 3;
var keys = [];
 var keyPressed = function() { 
  keys[keyCode] = true; };

  
var keyReleased = function() { 
  keys[keyCode] = false; };

//Health Bar Code

var healthBar = function(x,y,w,h,maxHealth){
    
    this.x = x;
    this.y = y;
    this.w = w;
    this.h = h;
    this.maxHealth = maxHealth;
    this.maxWidth = w;
    this.health = maxHealth;
    
};

healthBar.prototype.draw = function() {
    strokeWeight(5);
    stroke(0, 0, 0);
    fill(255, 255, 255);
    rect(this.x, this.y, this.maxWidth, this.h);
    fill(255, 0, 0);
    rect(this.x, this.y, this.w, this.h);
    
};

healthBar.prototype.Damage = function(amount) {
    
    this.health = amount;
    this.w = (this.health / this.maxHealth) * this.maxWidth;
    if(this.w <= 0){this.w = 0;}
    
};

var health = 100;
var healthBarWidth = 200;
var healthBarHeight = 25;
var x1 = width / 2 - healthBarWidth / 2;
var y1 = height / 2 - healthBarHeight / 2;

var health1 = new healthBar(x1 - 60, y1  + 175, healthBarWidth - 60, healthBarHeight, health);
var health2 = new healthBar(x1 + 100, y1  + 175, healthBarWidth - 60, healthBarHeight, health);
//---------------------------------------------------


var drawBitmoji = function(bitmojiX, bitmojiY, bitmojiHeight) 
{
noStroke();
rect(bitmojiX-(bitmojiHeight/150*24), bitmojiY+(bitmojiHeight/150*42), bitmojiHeight/150*150, bitmojiHeight/150*150);
    fill(255,205,148); //head
    ellipse(bitmojiX+(bitmojiHeight/150*50), bitmojiY+(bitmojiHeight/150*91), bitmojiHeight/150*62, bitmojiHeight/150*76); //head
    
    
    stroke(25, 20, 25);
    fill(255,255,255); //eye color
    ellipse(bitmojiX+(bitmojiHeight/150*37), bitmojiY+(bitmojiHeight/150*82), bitmojiHeight/150*17, bitmojiHeight/150*8); //left eye
    ellipse(bitmojiX+(bitmojiHeight/150*65), bitmojiY+(bitmojiHeight/150*82), bitmojiHeight/150*17, bitmojiHeight/150*8); //right eye
    
    
    fill(150, 75, 0);
    ellipse(bitmojiX+(bitmojiHeight/150*37), bitmojiY+(bitmojiHeight/150*82), bitmojiHeight/150*7, bitmojiHeight/150*6); //left pupil
    ellipse(bitmojiX+(bitmojiHeight/150*65), bitmojiY+(bitmojiHeight/150*82), bitmojiHeight/150*7, bitmojiHeight/150*6); //right pupil
    
    
    fill(255, 255, 255); //teeth
    
    fill(0, 0, 0);
    line(bitmojiX+(bitmojiHeight/150*30),bitmojiY+(bitmojiHeight/150*108),bitmojiX+(bitmojiHeight/150*71),bitmojiY+(bitmojiHeight/150*108)); //top of mouth
    
    
    fill(0, 0, 0);
    arc(bitmojiX+(bitmojiHeight/150*50), bitmojiY+(bitmojiHeight/150*67), bitmojiHeight/150*40, bitmojiHeight/150*26, 180, 360); //hat
    fill(255, 202, 148); //hat hole
    arc(bitmojiX+(bitmojiHeight/150*49), bitmojiY+(bitmojiHeight/150*65), bitmojiHeight/150*25, bitmojiHeight/150*14, 180, 360); //hat hole
    
    
    fill(150, 75, 0);
    arc(bitmojiX+(bitmojiHeight/150*50), bitmojiY+(bitmojiHeight/150*58), bitmojiHeight/150*22, bitmojiHeight/150*14, 55, 173); //hair in hat
    
    
     fill(255,205,148);
     bezier(bitmojiX+(bitmojiHeight/150*53), bitmojiY+(bitmojiHeight/150*91),bitmojiX+(bitmojiHeight/150*47),bitmojiY+(bitmojiHeight/150*85),bitmojiX+(bitmojiHeight/150*65),bitmojiY+(bitmojiHeight/150*107),bitmojiX+(bitmojiHeight/150*44),bitmojiY+(bitmojiHeight/150*103)); //nose
      
    
    
    line(bitmojiX+(bitmojiHeight/150*29),bitmojiY+(bitmojiHeight/150*72),bitmojiX+(bitmojiHeight/150*46),bitmojiY+(bitmojiHeight/150*72)); //glasses this one
    line(bitmojiX+(bitmojiHeight/150*72),bitmojiY+(bitmojiHeight/150*72),bitmojiX+(bitmojiHeight/150*55),bitmojiY+(bitmojiHeight/150*72)); //glasses 
    line(bitmojiX+(bitmojiHeight/150*27),bitmojiY+(bitmojiHeight/150*72),bitmojiX+(bitmojiHeight/150*27),bitmojiY+(bitmojiHeight/150*91)); //glasses this one
    line(bitmojiX+(bitmojiHeight/150*74),bitmojiY+(bitmojiHeight/150*72),bitmojiX+(bitmojiHeight/150*74),bitmojiY+(bitmojiHeight/150*91)); //glasses 
    line(bitmojiX+(bitmojiHeight/150*55),bitmojiY+(bitmojiHeight/150*91),bitmojiX+(bitmojiHeight/150*74),bitmojiY+(bitmojiHeight/150*91)); //glasses 
    line(bitmojiX+(bitmojiHeight/150*46),bitmojiY+(bitmojiHeight/150*72),bitmojiX+(bitmojiHeight/150*46),bitmojiY+(bitmojiHeight/150*91)); //glasses 
    line(bitmojiX+(bitmojiHeight/150*46),bitmojiY+(bitmojiHeight/150*91),bitmojiX+(bitmojiHeight/150*27),bitmojiY+(bitmojiHeight/150*91)); //glasses 
    line(bitmojiX+(bitmojiHeight/150*55),bitmojiY+(bitmojiHeight/150*72),bitmojiX+(bitmojiHeight/150*55),bitmojiY+(bitmojiHeight/150*91)); //glasses
    line(bitmojiX+(bitmojiHeight/150*46),bitmojiY+(bitmojiHeight/150*80),bitmojiX+(bitmojiHeight/150*55),bitmojiY+(bitmojiHeight/150*80)); //glasses
    line(bitmojiX+(bitmojiHeight/150*27),bitmojiY+(bitmojiHeight/150*79),bitmojiX+(bitmojiHeight/150*20),bitmojiY+(bitmojiHeight/150*84)); //glasses
    line(bitmojiX+(bitmojiHeight/150*75),bitmojiY+(bitmojiHeight/150*79),bitmojiX+(bitmojiHeight/150*80),bitmojiY+(bitmojiHeight/150*84)); //glasses
    
    noStroke();
    fill(255,205,148);
    rect(bitmojiX+(bitmojiHeight/150*43), bitmojiY+(bitmojiHeight/150*121), bitmojiHeight/150*15, bitmojiHeight/150*15); //neck
    
    fill(184, 196, 209);
    rect(bitmojiX+(bitmojiHeight/150*17), bitmojiY+(bitmojiHeight/150*135), bitmojiHeight/150*71, bitmojiHeight/150*49); //shirt
    
    stroke(255, 0, 0);
    line(bitmojiX+(bitmojiHeight/150*29),bitmojiY+(bitmojiHeight/150*146),bitmojiX+(bitmojiHeight/150*29),bitmojiY+(bitmojiHeight/150*184)); //left arm
    line(bitmojiX+(bitmojiHeight/150*76),bitmojiY+(bitmojiHeight/150*146),bitmojiX+(bitmojiHeight/150*76),bitmojiY+(bitmojiHeight/150*184)); //right arm
    
    fill(255, 0, 0);
    textSize(18*(bitmojiHeight/150));
    text("AD", bitmojiX+(bitmojiHeight/150*39), bitmojiY+(bitmojiHeight/150*159)); //shirt initials
    
    noStroke();
    fill(255,205,148);
    ellipse(bitmojiX+(bitmojiHeight/150*16),bitmojiY+(bitmojiHeight/150*91), bitmojiHeight/150*11, bitmojiHeight/150*20); //left ear
    ellipse(bitmojiX+(bitmojiHeight/150*83),bitmojiY+(bitmojiHeight/150*91), bitmojiHeight/150*11, bitmojiHeight/150*20); //right ear
    
};

var numAudience = 20;
var xPositions = [];
var yPositions = [];

for (var j = 0; j <= numAudience; ++j) {
    xPositions.push(round(random(30,350)));
    yPositions.push(round(random(0,100)));
}
 
var draw2 = function() { //draws background and bitmoji
    for (var i = 0; i < xPositions.length; i++) {
        noStroke();
        noFill();
        drawBitmoji(xPositions[i],yPositions[i],70);
    }
    
};




//-------------------------------------------------------------------------
var draw = function() {
    background(121, 121, 168);
    var drawRing = function(){
    //Bottom
    fill(31, 28, 31);
    rect(40,300,300,40);
    //Ring Floor
    fill(86, 135, 132);
    rect(40,140,300,160);
    //Blue Corner
    fill(59, 71, 199);
    rect(40,90,8,50);
    rect(332,90,8,50);
    //Red Corner
    fill(247, 32, 32);
    rect(332,250,8,50);
    rect(40,250,8,50);
    //Rope Rings
    fill(46, 42, 42);
    ellipse(54,95,12,10);
    ellipse(54,112,12,10);
    ellipse(54,130,12,10);
    ellipse(326,95,12,10);
    ellipse(326,112,12,10);
    ellipse(326,130,12,10);
    ellipse(54,255,12,10);
    ellipse(54,273,12,10);
    ellipse(54,290,12,10);
    ellipse(326,255,12,10);
    ellipse(326,273,12,10);
    ellipse(326,290,12,10);
    //Top Rope
    fill(227, 20, 20);
    rect(51,95,5,155);
    rect(323,95,5,155);
    rect(60,92,260,5);
    //Middle Rope
    fill(247, 247, 247);
    rect(323,260,5,8);
    rect(51,260,5,8);
    rect(60,109,260,5);
    //Bottom Rope
    fill(27, 186, 2);
    rect(323,277,5,8);
    rect(51,277,5,8);
    rect(60,127,260,5);
    };
    drawRing();
    
//Health Bar decrease
    mouseClicked = function() {
        var newHealth = health -= 20;
        health1.Damage(newHealth);
       //health2.Damage(newHealth);
};
    

health1.draw();
health2.draw();
strokeWeight(1);
     
//how you control it with the arrow keys
    if (keyIsPressed && keys[UP]) {
        y = y-boxerSpeed;
    } 
    
    if (keyIsPressed && keys[DOWN]) {
        y = y + boxerSpeed;
    }
    
    if (keyIsPressed && keys[LEFT]) {
        x = x - boxerSpeed;
    }
    
    if (keyIsPressed && keys[RIGHT]) {
        x = x + boxerSpeed;
    }
    
    /* 
    if (keyIsPressed && keys[W}) {
        y = y - boxerSpeed;
        }
        
    if (keyIsPressed && keys[S]) {
        y = y+ boxerspeed;
        }
    if (keyIsPressed && keys[A]) {
        x = x - boxerspeed;
    }
    if (keyIsPressed && keys[D]) {
        x = x - boxerspeed;
            */
//Boxer
    var drawtop = function (BitX,BitY,bitHeight){
    //Top
    fill(23, 99, 50);
    rect(BitX + bitHeight/150 * 75,BitY+ bitHeight/150 *129, bitHeight/150 *50, bitHeight/150 *65);
    rect(BitX + bitHeight/150 * 118,BitY+bitHeight/150 *126, bitHeight/150 *25,bitHeight/150 *60,bitHeight/150 * 20);
    rect(BitX + bitHeight/150 * 59,BitY+bitHeight/150 *126,bitHeight/150 * 25,bitHeight/150 * 60,bitHeight/150 * 20);
    //Pants
    fill(61, 57, 46);
    rect(BitX + bitHeight/150 * 75,BitY+bitHeight/150 *191,bitHeight/150 * 50,bitHeight/150 * 82);
    line(BitX + bitHeight/150 * 100,BitY+ bitHeight/150 *272,BitX + bitHeight/150 * 100,BitY+ bitHeight/150 *200);
    fill(0, 0, 0);
    ellipse(BitX + bitHeight/150 * 100,BitY+bitHeight/150 *194,bitHeight/150 * 5,bitHeight/150 * 5);
    };
    var drawbithead = function (BitX,BitY,bitHeight){
    //Head
    fill(224, 172, 105);
    ellipse(BitX + bitHeight/150 * 142, BitY+ bitHeight/150 *85,bitHeight/150 * 18,bitHeight/150 * 26);
    ellipse(BitX + bitHeight/150 * 58,BitY+ bitHeight/150 * 85,bitHeight/150 * 18,bitHeight/150 * 26);
    ellipse(BitX + bitHeight/150 * 100,BitY+ bitHeight/150 *91,bitHeight/150 * 86,bitHeight/150 * 100);
    //Eye 1
    fill(255, 255, 255);
    ellipse(BitX + bitHeight/150 * 120,BitY+ bitHeight/150 *94,bitHeight/150 * 20,bitHeight/150 * 20);
    ellipse(BitX + bitHeight/150 * 80,BitY+ bitHeight/150 *94,bitHeight/150 * 20,bitHeight/150 * 20);
    //Eye 2
    fill(135, 82, 2);
    ellipse(BitX + bitHeight/150 * 120,BitY+ bitHeight/150 *94,bitHeight/150 * 13,bitHeight/150 * 13);
    ellipse(BitX + bitHeight/150 * 80,BitY+ bitHeight/150 *94,bitHeight/150 * 13,bitHeight/150 * 13);
    //Eye 3
    fill(0, 0, 0);
    ellipse(BitX + bitHeight/150 * 120,BitY+ bitHeight/150 *94,bitHeight/150 * 8,bitHeight/150 * 8);
    ellipse(BitX + bitHeight/150 * 80,BitY+ bitHeight/150 *94,bitHeight/150 * 8,bitHeight/150 * 8);
    //Eye 4
    fill(250, 250, 250);
    ellipse(BitX + bitHeight/150 * 117,BitY+ bitHeight/150 *92,bitHeight/150 * 4,bitHeight/150 * 4);
    ellipse(BitX + bitHeight/150 * 77,BitY+ bitHeight/150 *92,bitHeight/150 * 4,bitHeight/150 * 4);
    //Beanie
    fill(124, 124, 125);
    ellipse(BitX + bitHeight/150 * 100,BitY+ bitHeight/150 *51,bitHeight/150 *78,bitHeight/150 *42);
    rect(BitX + bitHeight/150 * 58,BitY+ bitHeight/150 *55,bitHeight/150 *83,bitHeight/150 *18);
    fill(0, 0, 0);
    ellipse(BitX + bitHeight/150 * 100,BitY+ bitHeight/150 *29,bitHeight/150 *10,bitHeight/150 *5);
    //Nose
    fill(219, 168, 105);
    ellipse(BitX + bitHeight/150 * 100,BitY+ bitHeight/150 *109,bitHeight/150 *17,bitHeight/150 *12);
    //Lips
    fill(255, 129, 112);
    ellipse(BitX + bitHeight/150 * 100,BitY+ bitHeight/150 *126,bitHeight/150 *33,bitHeight/150 *10);
    line(BitX + bitHeight/150 * 115,BitY+ bitHeight/150 *125,BitX + bitHeight/150 * 84,BitY+ bitHeight/150 *125);
    //Facial Hair
    fill(0, 0, 0);
    ellipse(BitX + bitHeight/150 * 120,BitY+ bitHeight/150 *79,bitHeight/150 *19,bitHeight/150 *3);
    ellipse(BitX + bitHeight/150 * 80,BitY+ bitHeight/150 *79,bitHeight/150 *19,bitHeight/150 *3);
    triangle(BitX + bitHeight/150 * 100,BitY+ bitHeight/150 *144,BitX + bitHeight/150 * 120,BitY+ bitHeight/150 *135,BitX + bitHeight/150 * 80,BitY+ bitHeight/150 *135);
    rect(BitX + bitHeight/150 * 87,BitY+ bitHeight/150 *117,bitHeight/150 *25,bitHeight/150 *1);
    };
    drawtop(x, y, 50);
    drawbithead(x, y, 50);
    
    if(y > 210){
            y = 210;
              }
            
        if(y < 50){
            y = 50;
            }
        if(x > 275){
            x = 275;
        }
        if(x < 35){
            x = 35;
        }


 };



